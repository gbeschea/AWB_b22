"""Add assigned_profile_id to Order model

Revision ID: b080935f068c
Revises: cdc65724512d
Create Date: 2025-09-25 21:45:07.536554

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b080935f068c'
down_revision: Union[str, Sequence[str], None] = 'cdc65724512d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shipment_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('account_key', sa.String(length=64), nullable=False),
    sa.Column('parcels', sa.Integer(), nullable=False),
    sa.Column('weight_kg', sa.Float(), nullable=False),
    sa.Column('service', sa.String(length=255), nullable=True),
    sa.Column('shipment_content', sa.String(length=255), nullable=True),
    sa.Column('observations', sa.Text(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['account_key'], ['courier_accounts.account_key'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('address_validations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('validator_version', sa.String(length=32), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('errors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('suggestions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_address_validations_order_id'), 'address_validations', ['order_id'], unique=False)
    op.create_index(op.f('ix_address_validations_status'), 'address_validations', ['status'], unique=False)
    op.add_column('orders', sa.Column('assigned_profile_id', sa.Integer(), nullable=True))
    op.drop_index(op.f('idx_orders_address_status_partial'), table_name='orders', postgresql_where="((address_status IS NULL) OR ((address_status)::text = ANY ((ARRAY['invalid'::character varying, 'not_found'::character varying, 'partial_match'::character varying])::text[])))")
    op.drop_index(op.f('idx_orders_status_id_partial'), table_name='orders', postgresql_where="((address_status IS NULL) OR ((address_status)::text = ANY ((ARRAY['invalid'::character varying, 'not_found'::character varying, 'partial_match'::character varying])::text[])))")
    op.drop_index(op.f('ix_orders_shopify_order_id_unique'), table_name='orders')
    op.create_index(op.f('ix_orders_derived_status'), 'orders', ['derived_status'], unique=False)
    op.create_foreign_key(None, 'orders', 'shipment_profiles', ['assigned_profile_id'], ['id'])
    op.drop_index(op.f('idx_romaddr_judet_localitate_norm'), table_name='romania_addresses')
    op.drop_index(op.f('idx_romaddr_street_norm'), table_name='romania_addresses')
    op.drop_index(op.f('ix_romaddr_jl'), table_name='romania_addresses')
    op.drop_index(op.f('ix_romaddr_tip_norm'), table_name='romania_addresses')
    op.drop_index(op.f('ix_romaddr_zip_cod_postal'), table_name='romania_addresses')
    op.drop_column('romania_addresses', 'strada_norm')
    op.drop_column('romania_addresses', 'street_full_norm')
    op.drop_column('romania_addresses', 'judet_norm')
    op.drop_column('romania_addresses', 'tip_norm')
    op.drop_column('romania_addresses', 'localitate_norm')
    op.drop_column('romania_addresses', 'street_full')
    op.drop_column('romania_addresses', 'tip_artera_norm')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('romania_addresses', sa.Column('tip_artera_norm', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('romania_addresses', sa.Column('street_full', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('romania_addresses', sa.Column('localitate_norm', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('romania_addresses', sa.Column('tip_norm', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('romania_addresses', sa.Column('judet_norm', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('romania_addresses', sa.Column('street_full_norm', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('romania_addresses', sa.Column('strada_norm', sa.TEXT(), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_romaddr_zip_cod_postal'), 'romania_addresses', [sa.literal_column('btrim(cod_postal::text)')], unique=False)
    op.create_index(op.f('ix_romaddr_tip_norm'), 'romania_addresses', ['tip_norm'], unique=False)
    op.create_index(op.f('ix_romaddr_jl'), 'romania_addresses', ['judet_norm', 'localitate_norm'], unique=False)
    op.create_index(op.f('idx_romaddr_street_norm'), 'romania_addresses', ['tip_artera_norm', 'strada_norm'], unique=False)
    op.create_index(op.f('idx_romaddr_judet_localitate_norm'), 'romania_addresses', ['judet_norm', 'localitate_norm'], unique=False)
    op.drop_constraint(None, 'orders', type_='foreignkey')
    op.drop_index(op.f('ix_orders_derived_status'), table_name='orders')
    op.create_index(op.f('ix_orders_shopify_order_id_unique'), 'orders', ['shopify_order_id'], unique=True)
    op.create_index(op.f('idx_orders_status_id_partial'), 'orders', ['address_status', sa.literal_column('id DESC')], unique=False, postgresql_where="((address_status IS NULL) OR ((address_status)::text = ANY ((ARRAY['invalid'::character varying, 'not_found'::character varying, 'partial_match'::character varying])::text[])))")
    op.create_index(op.f('idx_orders_address_status_partial'), 'orders', ['address_status'], unique=False, postgresql_where="((address_status IS NULL) OR ((address_status)::text = ANY ((ARRAY['invalid'::character varying, 'not_found'::character varying, 'partial_match'::character varying])::text[])))")
    op.drop_column('orders', 'assigned_profile_id')
    op.drop_index(op.f('ix_address_validations_status'), table_name='address_validations')
    op.drop_index(op.f('ix_address_validations_order_id'), table_name='address_validations')
    op.drop_table('address_validations')
    op.drop_table('shipment_profiles')
    # ### end Alembic commands ###
